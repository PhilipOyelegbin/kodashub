// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Invoice {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String   @db.VarChar(255)
  price     String?
  status    Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @unique @default(uuid())
}

model Domain {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String   @db.VarChar(255)
  price     String?
  status    Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @unique @default(uuid())
}

model Service {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String   @db.VarChar(255)
  price     String?
  status    Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @unique @default(uuid())
}

model Profile {
  id        String   @id @default(uuid())
  bio       String?
  gender    String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  first_name   String
  last_name    String
  phone_number String
  password     String
  invoices     Invoice[]
  domains      Domain[]
  services     Service[]
  profile      Profile?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
